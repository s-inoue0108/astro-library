---
// Reset CSS
import "destyle.css/destyle.min.css";

// Speed insights
import SpeedInsights from "@vercel/speed-insights/astro";

import Header from "../components/common/Header.astro";
import Footer from "../components/common/Footer.astro";
import MenuContent from "../components/blog/large/MenuContent.astro";
import KatexEditor from "../components/blog/article/KatexEditor.vue";

// Fonts
import "@fontsource/noto-sans-jp/300.css";
import "@fontsource/noto-sans-jp/400.css";
import "@fontsource/noto-sans-jp/500.css";
import "@fontsource/noto-sans-jp/600.css";
import "@fontsource/noto-sans-jp/700.css";
import "@fontsource/montserrat/300.css";
import "@fontsource/montserrat/400.css";
import "@fontsource/montserrat/500.css";
import "@fontsource/montserrat/600.css";
import "@fontsource/montserrat/700.css";
import "@fontsource/montserrat/300-italic.css";
import "@fontsource/montserrat/400-italic.css";
import "@fontsource/montserrat/500-italic.css";
import "@fontsource/montserrat/600-italic.css";
import "@fontsource/montserrat/700-italic.css";
import "@fontsource/source-code-pro/400.css";
import "@fontsource/source-code-pro/400-italic.css";

interface Props {
	title: string;
	description: string;
	imageUrl?: URL;
}

const { title, description, imageUrl } = Astro.props;

const currentPath = Astro.url.pathname;

// OGP URL
const ogpImageURL = new URL("portfolio-favicon.png", import.meta.env.APP_URL);
---

<!doctype html>
<html lang="ja">
	<head prefix="og: https://ogp.me/ns#">
		<meta charset="UTF-8" />
		<meta name="description" content={description} />
		<meta name="og:site_name" content={import.meta.env.APP_NAME} />
		<meta name="viewport" content="width=device-width" />
		<meta property="og:type" content="website" />
		<meta property="og:url" content={Astro.url} />
		<meta property="og:title" content={title} />
		<meta property="og:image" content={imageUrl ?? ogpImageURL} />
		<meta name="generator" content={Astro.generator} />

		<!-- Twitter OGP -->
		<meta name="twitter:card" content="summary_large_image" />
		<meta name="twitter:site" content={import.meta.env.X_OWNER} />
		<meta name="twitter:creator" content={import.meta.env.X_OWNER} />

		<!--AdSense -->
		<meta name="google-adsense-account" content="ca-pub-3902543804034425" />

		<meta name="theme-color" media="(prefers-color-scheme: light)" content="#CBD5E1" />
		<meta name="theme-color" media="(prefers-color-scheme: dark)" content="#4B5563" />

		<!--noindex nofollow in preview route-->
		{
			new RegExp("^/blog/preview/").test(currentPath) && (
				<>
					<meta name="robots" content="noindex" />
					<meta name="robots" content="nofollow" />
				</>
			)
		}

		<!-- Favicon -->
		<link rel="icon" type="image/png" href="/portfolio-favicon.png" />

		<!--Sitemap -->
		<link rel="sitemap" href="/sitemap-index.xml" />

		<!-- Google tag (gtag.js) -->
		<script
			is:inline
			type="text/partytown"
			async
			src="https://www.googletagmanager.com/gtag/js?id=G-CYF55805ED"></script>
		<script is:inline type="text/partytown">
			window.dataLayer = window.dataLayer || [];
			function gtag() {
				dataLayer.push(arguments);
			}
			gtag("js", new Date());

			gtag("config", "G-CYF55805ED");
		</script>

		<!--title -->
		<title>{title}</title>
	</head>

	<body class="loading-fade scroll-bar">
		<Header />
		<MenuContent />
		<main>
			<slot />
		</main>
		{
			new RegExp("^/blog/preview/").test(currentPath) && (
				<div id="katex-editor">
					<KatexEditor client:visible />
				</div>
			)
		}
		<Footer />

		<!--ダークモード -->
		<script is:inline>
			if (typeof window.localStorage.getItem("theme") === "string") {
				if (window.localStorage.getItem("theme") === "dark") {
					document.documentElement.classList.remove("light");
					document.documentElement.classList.add("dark");
				} else {
					document.documentElement.classList.remove("dark");
					document.documentElement.classList.add("light");
				}
			} else {
				if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
					document.documentElement.classList.remove("light");
					document.documentElement.classList.add("dark");
				} else {
					document.documentElement.classList.remove("dark");
					document.documentElement.classList.add("light");
				}
			}
		</script>

		<SpeedInsights />
	</body>
</html>

<style is:global lang="scss">
	html {
		font-family: "Montserrat", "Noto sans JP", "sans-serif";
		scroll-behavior: smooth;
	}

	body {
		width: 100vw;
		overflow-x: hidden;
		line-break: strict;
		word-break: break-word;
		overflow-wrap: break-word;
		word-wrap: break-word;
	}

	.scroll-bar::-webkit-scrollbar {
		background: getColor(--bg-secondary-color);
	}

	.scroll-bar::-webkit-scrollbar-thumb {
		background: getColor(--border-color);
	}

	.loading-fade {
		background: getColor(--bg-secondary-color);
		animation: loading-fade 0.2s ease-in;
	}

	@keyframes loading-fade {
		0% {
			opacity: 0;
		}

		100% {
			opacity: 1;
		}
	}

	main {
		color: getColor(--text-primary-color);
		background: getColor(--bg-primary-color);
		width: 100%;
		min-height: calc(100vh - 36px);
		padding: 1rem;
		padding-top: calc(36px + 1rem);

		@include resp(sm) {
			padding-top: calc(48px + 1rem);
			min-height: calc(100vh - 40px);
		}

		@include resp(lg) {
			padding-top: calc(64px + 1rem);
			min-height: calc(100vh - 44px);
			padding: 1rem 3rem;
		}

		.article-content {
			h1 {
				width: 100%;
				border-image: tropicGradient(90deg) 1;
				border-bottom: solid 4px;
				padding-left: 0.4rem;
				padding-bottom: 0.2rem;
				font-size: 1.2rem;
				font-weight: 700;
				letter-spacing: 1px;
				margin: 2.5rem 0;
				white-space: nowrap;

				@include resp(sm) {
					font-size: 1.5rem;
					letter-spacing: 1.4px;
				}

				@include resp(lg) {
					font-size: 2.2rem;
					letter-spacing: 2px;
					padding-left: 0.8rem;
					padding-bottom: 0.3rem;
					border-bottom: solid 6px;
					margin: 4rem 0;
				}
			}

			h2 {
				border-image: tropicGradient(0deg) 1;
				border-left: solid 8px;
				padding-left: 0.5rem;
				font-size: 1.1rem;
				font-weight: 700;
				letter-spacing: 1px;
				margin: 2rem 0;

				@include resp(lg) {
					font-size: 1.5rem;
					border-left: solid 12px;
					margin: 3rem 0;
					padding-left: 1rem;
				}
			}

			h3 {
				font-weight: 700;
				letter-spacing: 1px;
				margin: 1.5rem 0;

				@include resp(lg) {
					font-size: 1.2rem;
					margin: 2rem 0;
				}
			}

			p {
				font-weight: 400;
				line-height: 1.8rem;

				@include resp(lg) {
					font-size: 1.2rem;
					line-height: 2.4rem;
				}
			}

			a:not([href*="#fn"]) {
				font-weight: 500;
				color: $sky;
				align-items: center;

				&:active {
					text-decoration: underline;
					transition: 0.2s ease;
				}

				@include resp(lg) {
					&:hover {
						text-decoration: underline;
						transition: 0.2s all;
					}
				}

				&:visited {
					color: $violet;

					svg {
						fill: $violet;
					}
				}

				svg {
					fill: $sky;
					width: auto;
					height: 0.9rem;
					vertical-align: middle;
					margin: 0 0.3rem 0.3rem 0.3rem;

					@include resp(lg) {
						width: 1.1rem;
						height: 1.1rem;
					}
				}
			}

			a[href*="#fn"] {
				color: getColor(--text-secondary-color);

				&:active {
					opacity: 0.5;
					transition: 0.2s ease;
				}

				@include resp(lg) {
					&:hover {
						opacity: 0.5;
						transition: 0.2s all;
					}
				}
			}

			blockquote {
				margin: 1rem 0;
				width: 100%;
				padding: 0.5rem 1rem;
				border-left: solid 8px getColor(--border-color);
				background: getColor(--bg-secondary-color);

				@include resp(lg) {
					border-left-width: 12px;
					padding: 0.6rem 1.2rem;
				}

				.code-title {
					background: getColor(--bg-primary-color);
					margin-bottom: calc(4px - 0.9rem);
				}

				pre {
					background: getColor(--bg-primary-color);
				}

				code {
					background: getColor(--bg-primary-color);
				}
			}

			.blockquote-info {
				display: flex;
				flex-direction: column;
				align-items: start;
				gap: 1rem;
				border: solid 1px $sky;
				border-left-width: 8px;

				.svg-info {
					height: 1.5rem;
					fill: $sky;
				}

				@include resp(lg) {
					border-width: 2px;
					border-left-width: 12px;

					.svg-info {
						height: 1.8rem;
					}
				}
			}

			.blockquote-warning {
				display: flex;
				flex-direction: column;
				align-items: start;
				gap: 1rem;
				border: solid 1px $amber;
				border-left-width: 8px;

				.svg-warning {
					height: 1.5rem;
					fill: $amber;
				}

				@include resp(lg) {
					border-width: 2px;
					border-left-width: 12px;

					.svg-warning {
						height: 1.8rem;
					}
				}
			}

			.blockquote-hint {
				display: flex;
				flex-direction: column;
				align-items: start;
				gap: 1rem;
				border: solid 1px $emerald;
				border-left-width: 8px;

				.svg-hint {
					height: 1.5rem;
					fill: $emerald;
				}

				@include resp(lg) {
					border-width: 2px;
					border-left-width: 12px;

					.svg-hint {
						height: 1.8rem;
					}
				}
			}

			ul {
				width: 100%;
				display: block;
				padding: 1rem 0 1rem 1rem;

				@include resp(lg) {
					font-size: 1.2rem;
					padding: 1.5rem 0 1.5rem 1.5rem;
				}

				li {
					list-style: disc;
					padding: 0.3rem 0;
					line-height: 1.8rem;

					@include resp(lg) {
						padding: 0.5rem 0;
						line-height: 2.4rem;
					}
				}
			}

			ol {
				width: 100%;
				display: block;
				padding: 1rem 0 1rem 1rem;

				@include resp(lg) {
					font-size: 1.2rem;
					padding: 1.5rem 0 1.5rem 1.5rem;
				}

				li {
					list-style: decimal;
					padding: 0.3rem 0;
					line-height: 1.8rem;

					@include resp(lg) {
						line-height: 2.4rem;
					}

					&::marker {
						font-weight: 600;
					}
				}
			}

			dl {
				width: 100%;
				display: block;
				padding: 1rem 0 1rem 1rem;

				@include resp(lg) {
					font-size: 1.2rem;
					padding: 1.5rem 0 1.5rem 1.5rem;
				}

				dt {
					padding-top: 1rem;

					@include resp(lg) {
						padding-top: 1.2rem;
					}
				}

				dd {
					padding: 1rem 0 0 2rem;
					line-height: 1.8rem;

					@include resp(lg) {
						padding: 1.2rem 0 0 2.4rem;
						line-height: 2.4rem;
					}
				}
			}

			.footnote-item::marker {
				color: getColor(--text-secondary-color);
			}

			.figure-table {
				position: relative;
				overflow-x: auto;
				margin: 2rem 0;
				padding-bottom: 0.5rem;
				width: 100%;
				display: flex;
				flex-direction: column;
				align-items: center;
				gap: 1rem;

				@include resp(lg) {
					padding: 2.4rem 0;
					gap: 1.2rem;
				}

				table {
					margin: 0 auto;
					min-width: 1px;
					border-collapse: collapse;
					display: table;

					th,
					td {
						border: solid 1px getColor(--border-color);
						padding: 0.5rem;
						vertical-align: middle;
						white-space: nowrap;

						@include resp(lg) {
							font-size: 1.2rem;
							padding: 0.5rem 1rem;
						}
					}

					th {
						text-align: center;

						@include resp(lg) {
							font-size: 1.2rem;
						}
					}

					td {
						background: getColor(--bg-secondary-color);

						@include resp(lg) {
							font-size: 1.2rem;
						}
					}
				}

				figcaption {
					position: sticky;
					left: 50%;
					transform: translateX(-50%);

					display: flex;
					align-items: center;
					gap: 0.5rem;
					color: getColor(--text-secondary-color);
					font-size: 0.9rem;
					font-weight: 500;

					svg {
						width: auto;
						height: 0.9rem;
						fill: getColor(--text-secondary-color);
					}

					@include resp(lg) {
						font-size: 1.1rem;
						gap: 0.6rem;

						svg {
							height: 1.1rem;
						}
					}
				}
			}

			.figure-table::-webkit-scrollbar {
				background: getColor(--bg-secondary-color);
			}

			.figure-table::-webkit-scrollbar-thumb {
				background: getColor(--border-color);
				border-radius: 9999px;
			}

			code {
				color: getColor(--text-secondary-color);
				font-family: "Source Code Pro", Consolas, monospace;
				font-size: 0.9rem;
				background: getColor(--bg-secondary-color);
				padding: 0.2rem 0.5rem;
				border-radius: 4px;

				@include resp(lg) {
					font-size: 1.1rem;
				}
			}

			.code-title {
				width: 100%;
				display: flex;
				justify-content: space-between;
				align-items: center;
				padding: 0.5rem 1rem;
				margin-top: 1rem;
				margin-bottom: 4px;
				background: getColor(--bg-secondary-color);
				border-radius: 4px 4px 0 0;

				@include resp(lg) {
					margin-top: 2rem;
					margin-bottom: 6px;
					font-size: 1.2rem;
					padding: 0.5rem 1.5rem;
					letter-spacing: 0.5px;
				}

				.title {
					width: 80%;
					font-weight: 600;
					overflow-x: auto;
					overflow-y: hidden;
				}

				.copy-btn {
					position: relative;

					svg {
						position: absolute;
						top: 50%;
						right: 0;
						transform: translateY(-50%);
						height: 16px;
						width: auto;
						fill: getColor(--text-secondary-color);

						@include resp(lg) {
							height: 20px;
							width: auto;
						}
					}
				}
			}

			pre {
				display: block;
				width: 100%;
				height: max-content;
				background: getColor(--bg-secondary-color);
				margin-bottom: 1rem;
				padding: 1rem;
				overflow-x: auto;
				border-radius: 0 0 4px 4px;
				line-height: 1.5rem;

				code {
					font-size: 0.9rem;
					line-height: 1.2rem;
					padding: 0;
					color: getColor(--text-primary-color);

					@include resp(lg) {
						font-size: 1.1rem;
						line-height: 1.4rem;
					}
				}

				@include resp(lg) {
					margin-bottom: 2rem;
					line-height: 1.8rem;
				}
			}

			pre::-webkit-scrollbar {
				background: getColor(--bg-secondary-color);
			}

			pre::-webkit-scrollbar-thumb {
				background: getColor(--border-color);
				border-radius: 9999px;
			}

			hr {
				border-color: getColor(--border-color);
				margin: 1rem 0;

				@include resp(lg) {
					margin: 2rem 0;
				}
			}

			.figure-img {
				padding: 2rem 0;
				width: 100%;
				display: flex;
				flex-direction: column;
				align-items: center;
				gap: 1rem;

				@include resp(lg) {
					padding: 2.4rem 0;
					gap: 1.2rem;
				}

				img {
					width: 100%;
					max-height: 256px;
					object-fit: contain;
					border-radius: 4px;

					@include resp(lg) {
						max-height: 512px;
						border-radius: 8px;
					}
				}

				figcaption {
					display: flex;
					align-items: center;
					gap: 0.5rem;
					color: getColor(--text-secondary-color);
					font-size: 0.9rem;
					font-weight: 500;

					svg {
						width: auto;
						height: 0.9rem;
						fill: getColor(--text-secondary-color);
					}

					@include resp(lg) {
						font-size: 1.1rem;
						gap: 0.6rem;

						svg {
							height: 1.1rem;
						}
					}
				}
			}

			.iframely-embed {
				margin: 1rem 0;
			}

			.katex-display {
				width: 100%;
				height: max-content;
				overflow-x: auto;
				overflow-y: hidden;
				padding: 0.5rem 0;
			}

			.katex-display::-webkit-scrollbar {
				background: getColor(--bg-secondary-color);
			}

			.katex-display::-webkit-scrollbar-thumb {
				background: getColor(--border-color);
				border-radius: 9999px;
			}
		}
	}

	#katex-editor {
		width: 90vw;
		height: 80%;
		position: fixed;
		top: 128px;
		left: 50vw;
		transform: translateX(-50%);
		z-index: 200;

		display: none;

		@include resp(lg) {
			display: block;
		}
	}

	.blind {
		width: 100%;
		height: 100%;
		opacity: 0.1;
		pointer-events: none;
	}
</style>
