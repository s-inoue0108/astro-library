---
import { svgPaths, svgViewBoxes } from "../../lib/svg/paths";
const date = new Date();
const year = date.getFullYear();

const currentPath = Astro.url.pathname;

const isInHome = (path: string): boolean => {
	return path === "/";
};
---

<footer class:list={{ loadingslidefade: isInHome(currentPath) }}>
	<h6 class:list={["copyright", { loadingfade: isInHome(currentPath) }]}>
		&copy; {year} Shota Inoue
	</h6>
	<a href="https://github.com/s-inoue0108" target="_blank" rel="noopener noreferrer" class:list={["github-link", { loadingfade: isInHome(currentPath) }]}>
		<svg xmlns="http://www.w3.org/2000/svg" viewBox={svgViewBoxes.gitHub}>
			<path d={svgPaths.gitHub}> </path>
		</svg>
		<label>GitHub</label>
	</a>
</footer>

<style lang="scss">
	footer {
		width: 100%;
		height: 36px;
		padding: 6px;

		@include resp(sm) {
			height: 40px;
			padding: 6px 12px;
		}

		@include resp(lg) {
			height: 44px;
		}

		position: sticky;
		top: 100vh;
		background: getColor(--bg-secondary-color);
		box-shadow: 0 0 3px getColor(--shadow-color);

		.copyright {
			font-size: 0.8rem;
			color: getColor(--text-primary-color);
			position: absolute;
			top: 50%;
			left: 50%;
			transform: translate(-50%, -50%);

			@include resp(sm) {
				font-size: 0.9rem;
			}

			@include resp(lg) {
				font-size: 1rem;
			}
		}

		.github-link {
			font-size: 1.2rem;
			color: getColor(--text-primary-color);
			position: absolute;
			top: 50%;
			right: 6px;
			transform: translate(-50%, -50%);
			display: flex;
			align-items: center;
			gap: 0.5rem;

			svg {
				width: 0.9rem;
				fill: getColor(--text-primary-color);

				@include resp(sm) {
					width: 1.4rem;
				}
			}

			@include resp(sm) {
				font-size: 1.4rem;
			}

			@include resp(lg) {
				border: solid 0.5px getColor(--text-primary-color);
				border-radius: 12px;
				padding: 2px 4px;
			}

			label {
				display: none;
				cursor: pointer;

				@include resp(lg) {
					display: block;
					font-size: 1rem;
				}
			}
		}
	}

	.loadingslidefade {
		animation: 3s fade-in-footer ease-out;
	}

	@keyframes fade-in-footer {
		0% {
			background: getColor(--bg-primary-color);
			box-shadow: none;
		}

		80% {
			background: getColor(--bg-primary-color);
			box-shadow: none;
		}

		100% {
			background: getColor(--bg-secondary-color);
		}
	}

	.loadingfade {
		animation: 3s fade-in-footer-items ease-out;
	}

	@keyframes fade-in-footer-items {
		0% {
			opacity: 0;
		}

		80% {
			opacity: 0;
		}

		100% {
			opacity: 1;
		}
	}
</style>
