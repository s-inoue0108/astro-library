---
import Theme from "./buttons/Theme.vue";
// Image
import { Image } from "astro:assets";
// HeaderImage
import HeaderImage from "../../images/common/portfolio-favicon.png";

const currentPath = Astro.url.pathname;

const isInHome = (path: string): boolean => {
	return path === "/";
};
---

<header class:list={{ bgprimary: isInHome(currentPath), loadingfade: isInHome(currentPath) }}>
	<ul class="app-title">
		<a href={import.meta.env.APP_URL} class="header-img">
			<Image src={HeaderImage} alt={import.meta.env.APP_NAME} />
		</a>
		<h1 class="title">{import.meta.env.APP_NAME}</h1>
	</ul>
	<ul class="buttons">
		<Theme client:load />
	</ul>
</header>

<style lang="scss">
	header {
		position: relative;
		width: 100%;
		height: 36px;
		padding: 6px 12px;

		@include resp(sm) {
			height: 48px;
			padding: 12px;
		}

		@include resp(lg) {
			height: 64px;
			padding: 32px 44px;
		}

		display: flex;
		justify-content: space-between;
		align-items: center;
		position: fixed;
		top: 0;
		z-index: 9999;

		background: getColor(--bg-secondary-color, 0.9);
		// box-shadow: 0 0 7px getColor(--shadow-color);

		.app-title {
			display: flex;
			align-items: center;
			gap: 64px;

			.title {
				font-size: 1.8rem;
				font-weight: 700;
				letter-spacing: 1px;
				color: getColor(--text-primary-color);
				position: absolute;
				top: 50%;
				left: 128px;
				transform: translateY(-50%);

				display: none;

				@include resp(lg) {
					display: block;
				}
			}

			.header-img {
				width: calc(36px * 0.8);
				height: calc(36px * 0.8);

				@include resp(sm) {
					width: calc(48px * 0.8);
					height: calc(48px * 0.8);
				}

				@include resp(lg) {
					width: calc(64px * 0.8);
					height: calc(64px * 0.8);
				}

				img {
					width: 100%;
					height: 100%;
					border-radius: 6px;
					object-fit: contain;

					&:active {
						opacity: 0.7;
						transition: 0.3s ease;
					}
				}
			}
		}

		.buttons {
			display: flex;
			align-items: baseline;
			gap: 64px;
		}
	}

	.bgprimary {
		background: getColor(--bg-primary-color);
	}

	.loadingfade {
		animation: 3s fade-in-header forwards;
	}

	@keyframes fade-in-header {
		0% {
			opacity: 0;
		}

		80% {
			opacity: 0;
			transform: translateY(-36px);
		}

		100% {
			opacity: 1;
		}
	}
</style>
