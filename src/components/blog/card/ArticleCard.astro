---
import type { Article } from "../../../lib/newt/types";
import TagCard from "../card/TagCard.vue";
// Image
import { Image } from "astro:assets";
// Header Image
import HeaderImage from "../../../images/common/portfolio-favicon.png";

interface Props {
	article: Pick<Article, "title" | "slug" | "description" | "thambnail" | "category" | "tags" | "_sys">;
}

const { article } = Astro.props;
const { title, slug, description, thambnail, tags, _sys } = article;

const sliceText = (text: string | undefined, limit: number): string => {
	if (!text || text.length === 0) {
		return "";
	}
	if (text && text.length > limit) {
		return `${text.slice(0, limit)}...`;
	}
	return text;
};
---

<a href={`/blog/article/${slug}`} class="card">
	<div class="thambnail">
		{thambnail ? <Image src={thambnail.src} width={thambnail.width} height={thambnail.height} alt={thambnail?.altText ?? ""} /> : <Image src={HeaderImage} alt="" />}
	</div>
	<ul class="info">
		<li class="title">
			<h1>{sliceText(title, 30)}</h1>
		</li>
		<li class="description">
			<p>{sliceText(description, 40)}</p>
		</li>
		<li class="meta-info">
			<div class="tags">
				{
					tags && tags.length !== 0 ? (
						tags.slice(0, 2).map((tag) => {
							return <TagCard tag={tag} isLink={false} />;
						})
					) : (
						<></>
					)
				}
			</div>
			<div class="published-at">
				<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
					<path d="M256 0a256 256 0 1 1 0 512A256 256 0 1 1 256 0zM232 120V256c0 8 4 15.5 10.7 20l96 64c11 7.4 25.9 4.4 33.3-6.7s4.4-25.9-6.7-33.3L280 243.2V120c0-13.3-10.7-24-24-24s-24 10.7-24 24z"></path>
				</svg>
				<label>{new Intl.DateTimeFormat("ja").format(new Date(_sys.raw.firstPublishedAt))}</label>
			</div>
		</li>
	</ul>
</a>

<style lang="scss">
	.card {
		display: block;
		position: relative;
		width: 100%;
		height: 100%;
		border: solid 2px getColor(--border-color);
		border-radius: 8px;

		&:active {
			opacity: 0.5;
			transition: 0.3s ease;
		}

		.thambnail {
			width: 100%;
			height: 100%;
			position: absolute;

			img {
				width: 100%;
				height: 100%;
				object-fit: cover;
				border-radius: 6px;
			}
		}

		.info {
			width: 100%;
			height: 50%;
			position: absolute;
			bottom: 0;
			border-radius: 0 0 6px 6px;
			background: getColor(--bg-secondary-color, 0.7);

			.title {
				height: calc(2.8rem + 10px);
				font-size: 1.4rem;
				font-weight: 700;
				padding: 0.2rem;
				letter-spacing: 0.7px;
			}

			.description {
				height: calc(2rem + 10px);
				font-size: 1rem;
				font-weight: 400;
				padding: 0.2rem;

				p {
					color: getColor(--text-secondary-color);
				}
			}

			.meta-info {
				position: absolute;
				bottom: 4px;
				width: 100%;
				height: 1rem;
				display: flex;
				align-items: center;
				justify-content: space-between;
				padding: 0 0.2rem;

				.tags {
					width: max-content;
					display: flex;
					align-items: center;
					gap: 0.5rem;
					height: 100%;
				}

				.published-at {
					width: max-content;
					height: 100%;
					display: flex;
					align-items: center;
					gap: 0.3rem;

					svg {
						width: auto;
						height: 0.8rem;
						fill: getColor(--text-primary-color);
					}

					label {
						font-size: 0.8rem;
						font-weight: 700;
						letter-spacing: 0.7px;
					}
				}
			}
		}
	}
</style>
