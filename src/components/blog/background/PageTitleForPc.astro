---
import type { NewtImageProps } from "../../../lib/newt/types";
// TokyoNightScape
import TokyoNightScape from "../../../images/common/TokyoNightScape.jpeg";
// Image
import { Image } from "astro:assets";

interface Props {
	title: string;
	description?: string;
	svgIconPath?: string;
	svgViewBox?: string;
	iconImage?: NewtImageProps;
	bgImage?: NewtImageProps;
	marginRem?: number;
}

const { title, description, svgIconPath, svgViewBox, iconImage, bgImage, marginRem } = Astro.props;

const margin = marginRem && marginRem !== 0 ? `${marginRem}rem` : "0";
---

<div class="page-title">
	{
		bgImage ? (
			<Image
				src={bgImage.src}
				width={bgImage.width}
				height={bgImage.height}
				alt={bgImage.altText}
				class="bg-image-pc"
			/>
		) : (
			<Image src={TokyoNightScape} alt="東京の夜景" class="bg-image-pc" />
		)
	}
	<div class="title-section-pc">
		{
			iconImage && (
				<Image
					src={iconImage.src}
					width={iconImage.width}
					height={iconImage.height}
					alt={iconImage.altText}
					class="icon-image"
				/>
			)
		}
		{
			svgIconPath && !iconImage && (
				<svg xmlns="http://www.w3.org/2000/svg" viewBox={svgViewBox ?? "0 0 512 512"}>
					<path d={svgIconPath} />
				</svg>
			)
		}
		<h1 class="title">{title}</h1>
	</div>
	{description && description.length > 0 && <p class="description">{description}</p>}
</div>

<script>
	import { gsap } from "gsap";

	const bgImg = document.querySelector(".bg-image-pc");
	const titleSection = document.querySelector(".title-section-pc");

	if (bgImg && titleSection) {
		gsap
			.timeline()
			.from(bgImg, {
				autoAlpha: 0,
				duration: 1,
				delay: 0.2,
				ease: "power4.out",
			})
			.from(
				titleSection,
				{
					autoAlpha: 0,
					yPercent: 20,
					duration: 1,
					ease: "power4.out",
				},
				"-=0.8"
			);
	}
</script>

<style lang="scss" define:vars={{ margin }}>
	.page-title {
		position: relative;
		margin-top: 1rem;
		margin-bottom: 2rem;
		height: 256px;
		display: none;

		@include resp(lg) {
			width: calc(100% - var(--margin));
			display: block;
		}

		@include resp(xl) {
			width: calc(100% - 2 * var(--margin));
		}

		.bg-image-pc {
			position: absolute;
			width: 100%;
			height: 100%;
			object-fit: cover;
			opacity: 0.5;
			object-position: 50% 75%;
			border-radius: 8px;
		}

		.title-section-pc {
			position: absolute;
			top: 50%;
			left: 50%;
			transform: translate(-50%, -50%);
			display: flex;
			align-items: center;
			gap: 3rem;

			.icon-image {
				width: auto;
				height: 5rem;
				object-fit: contain;
			}

			svg {
				width: auto;
				height: 5rem;
				fill: getColor(--text-primary-color);
			}

			.title {
				font-size: 5rem;
				font-weight: 700;
				letter-spacing: 3px;
				white-space: nowrap;
			}
		}

		.description {
			position: absolute;
			bottom: 1.2rem;
			left: 50%;
			transform: translateX(-50%);
			color: getColor(--text-secondary-color);
			font-size: 1.2rem;
			font-weight: 600;
			letter-spacing: 4px;
			white-space: nowrap;
		}
	}
</style>
