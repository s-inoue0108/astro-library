---
import type { NewtImageProps } from "../../../lib/newt/types";
// TokyoNightScape
import TokyoNightScape from "../../../images/common/TokyoNightScape.jpeg";
// Image
import { Image } from "astro:assets";

interface Props {
	title: string;
	description?: string;
	svgIconPath?: string;
	svgViewBox?: string;
	iconImage?: NewtImageProps;
	bgImage?: NewtImageProps;
}

const { title, description, svgIconPath, svgViewBox, iconImage, bgImage } = Astro.props;
---

<div class="page-title">
	{
		bgImage ? (
			<Image
				src={bgImage.src}
				width={bgImage.width}
				height={bgImage.height}
				alt={bgImage.altText}
				class="bg-image"
			/>
		) : (
			<Image src={TokyoNightScape} alt="東京の夜景" class="bg-image" />
		)
	}
	<div class="title-section">
		{
			iconImage && (
				<Image
					src={iconImage.src}
					width={iconImage.width}
					height={iconImage.height}
					alt={iconImage.altText}
					class="icon-image"
				/>
			)
		}
		{
			svgIconPath && !iconImage && (
				<svg xmlns="http://www.w3.org/2000/svg" viewBox={svgViewBox ?? "0 0 512 512"}>
					<path d={svgIconPath} />
				</svg>
			)
		}
		<h1 class="title">{title}</h1>
	</div>
	{description && description.length > 0 && <p class="description">{description}</p>}
</div>

<script>
	import { gsap } from "gsap";

	const bgImg = document.querySelector(".bg-image");
	const titleSection = document.querySelector(".title-section");

	if (bgImg && titleSection) {
		gsap
			.timeline()
			.from(bgImg, {
				autoAlpha: 0,
				duration: 1,
				delay: 0.2,
				ease: "power4.out",
			})
			.from(
				titleSection,
				{
					autoAlpha: 0,
					yPercent: 20,
					duration: 1,
					ease: "power4.out",
				},
				"-=0.8"
			);
	}
</script>

<style lang="scss">
	.page-title {
		width: 100vw;
		height: 128px;
		position: relative;
		margin: -1rem -1rem 0 -1rem;

		@include resp(lg) {
			display: none;
		}

		.bg-image {
			position: absolute;
			width: 100%;
			height: 100%;
			object-fit: cover;
			object-position: 50% 75%;
			opacity: 0.5;
		}

		.title-section {
			position: absolute;
			top: 50%;
			left: 50%;
			transform: translate(-50%, -50%);
			display: flex;
			align-items: center;
			gap: 1rem;

			.icon-image {
				width: auto;
				height: 2rem;
				object-fit: contain;
			}

			svg {
				width: auto;
				height: 2rem;
				fill: getColor(--text-primary-color);
			}

			.title {
				font-size: 2rem;
				font-weight: 700;
				letter-spacing: 1px;
				white-space: nowrap;
			}
		}

		.description {
			position: absolute;
			bottom: 0.8rem;
			left: 50%;
			transform: translateX(-50%);
			color: getColor(--text-secondary-color);
			font-size: 0.8rem;
			font-weight: 600;
			letter-spacing: 1.5px;
			white-space: nowrap;
		}
	}
</style>
