---
import type { Work } from "../../lib/newt/types";
import SvgButton from "../common/buttons/Svg.vue";
import ImageWindow from "./ImageWindow";
import { svgPaths, svgViewBoxes } from "../../lib/svg/paths";

// Image
import { Image } from "astro:assets";

interface Props {
	work: Work;
}

const { work } = Astro.props;
const { description, images, url, repo, title, stacks } = work;
---

<div class="work-card">
	<ImageWindow images={images} client:visible />
	<div class="title-wrapper">
		<div class="titles">
			<h1 class="title">{title}</h1>
			{
				url && url.length > 0 && (
					<a href={url} target="_blank" rel="noopener noreferrer" class="url">
						{url}
					</a>
				)
			}
		</div>
		<div class="repo">
			<SvgButton
				svgIconPath={svgPaths.github}
				svgViewBox={svgViewBoxes.github}
				linkUrl={repo}
				isLink={true}
				isBlank={true}
			/>
		</div>
	</div>
	<p class="description">{description}</p>
	<ul class="stacks">
		{
			stacks &&
				stacks.length > 0 &&
				stacks.map((stack) => {
					return (
						<li class="stack">
							{stack.icon && (
								<a href={`#skill-${stack.name}`} class="stack-link">
									<Image
										src={stack.icon.src}
										width={stack.icon.width}
										height={stack.icon.height}
										alt={stack.icon.altText}
									/>
								</a>
							)}
						</li>
					);
				})
		}
	</ul>
</div>

<style lang="scss">
	.work-card {
		display: flex;
		flex-direction: column;
		gap: 1rem;

		@include resp(lg) {
			padding: 0 25%;
			gap: 2rem;
		}

		.title-wrapper {
			display: flex;
			justify-content: space-between;
			align-items: center;
			fill: getColor(--border-color);

			.titles {
				display: flex;
				flex-direction: column;
				gap: 0.5rem;

				.title {
					font-size: 1.5rem;
					font-weight: 600;
					letter-spacing: 2px;

					@include resp(lg) {
						font-size: 2.4rem;
						letter-spacing: 3px;
					}
				}

				.url {
					font-size: 0.8rem;
					font-weight: 300;
					color: $sky;

					&:active {
						opacity: 0.5;
						transition: 0.3s ease;
					}

					@include resp(lg) {
						font-size: 1rem;
						&:hover {
							text-decoration: underline;
						}
					}

					&:visited {
						color: $violet;
					}
				}
			}
		}

		.description {
			line-height: 1.7rem;

			@include resp(lg) {
				font-size: 1.2rem;
				line-height: 2rem;
			}
		}
	}

	.stacks {
		display: flex;
		align-items: center;
		gap: 1rem;

		@include resp(lg) {
			gap: 1.5rem;
		}

		.stack {
			width: 24px;
			height: 24px;

			&:active {
				opacity: 0.5;
				transition: 0.3s ease;
			}

			@include resp(lg) {
				width: 32px;
				height: 32px;

				&:hover {
					opacity: 0.5;
					transition: 0.3s ease;
				}
			}

			.stack-link {
				img {
					width: 100%;
					height: 100%;
					object-fit: contain;
				}
			}
		}
	}
</style>
