---
// Server Side Rendering
export const prerender = false;

import Layout from "../../../layouts/Layout.astro";
import Toc from "../../../components/blog/article/Toc.vue";
// Newt
import { getPreviewBySlug } from "../../../lib/newt/client";
import type { Article } from "../../../lib/newt/types";
// KaTeX
import "katex/dist/katex.min.css";
// Prism
// import Prism from "prismjs";
// // Prism Language
// import "prismjs/components/prism-typescript";
// import "prismjs/components/prism-bash";
// import "prismjs/components/prism-css";
// import "prismjs/components/prism-css-extras";
// import "prismjs/components/prism-javascript";
// import "prismjs/components/prism-json";
// import "prismjs/components/prism-markup";
// import "prismjs/components/prism-markup-templating";
// import "prismjs/components/prism-php";
// import "prismjs/components/prism-pug";
// import "prismjs/components/prism-scss";
// import "prismjs/components/prism-csv";
// import "prismjs/components/prism-django";
// import "prismjs/components/prism-docker";
// import "prismjs/components/prism-yaml";
// import "prismjs/components/prism-wolfram";
// import "prismjs/components/prism-vim";
// import "prismjs/components/prism-excel-formula";
// import "prismjs/components/prism-latex";
// import "prismjs/components/prism-sql";
// import "prismjs/components/prism-regex";
// import "prismjs/components/prism-markdown";
// // Prism Theme
// import "prismjs/themes/prism-okaidia.min.css";
// Cheerio
import { load } from "cheerio";

// params
const { slug } = Astro.params;

if (!slug) {
	return Astro.redirect("/blog");
}

const article = await getPreviewBySlug(slug);
const search = Astro.url.search;

if (!article || !search.match(/^\?secret=/) || search.split(/^\?secret=/)[1] !== import.meta.env.NEWT_ARTICLE_PREVIEW_SECRET) {
	return Astro.redirect("/blog");
}

// Table of contents
const headings: string[] = [];
const $ = load(article!.content.data);
$("h1,h2,h3").each((_, elm) => {
	const heading = $(elm).text();
	headings.push(heading);
	$(elm).contents().wrap(`<a id="${heading}" href="#${heading}"></a>`);
});
article!.content.data = $.html();
---

<Layout title={`${article!.title} | ブログ | ${import.meta.env.APP_NAME}`} description={`${article.description}`}>
	<Toc headings={headings} />
	<article set:html={article!.content.data} />
</Layout>
