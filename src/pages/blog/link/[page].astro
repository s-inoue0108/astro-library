---
import Layout from "../../../layouts/Layout.astro";
import NoContent from "../../../components/blog/background/NoContent.astro";
import { svgPaths, svgViewBoxes } from "../../../lib/svg/paths";
import { getDevLinks } from "../../../lib/newt/client";
import type { Page, GetStaticPathsOptions } from "astro";
import type { DevLink } from "../../../lib/newt/types";
import Pager from "../../../components/blog/background/Pager.vue";
import DevLinkCard from "../../../components/blog/card/DevLinkCard.astro";
import PageTitle from "../../../components/blog/background/PageTitle.astro";
import PageTitleForPc from "../../../components/blog/background/PageTitleForPc.astro";

export const getStaticPaths = async ({
	paginate,
}: {
	paginate: GetStaticPathsOptions["paginate"];
}) => {
	const links = await getDevLinks();

	if (!links || links.length <= 0) return;

	const routes = links.flatMap((link) => {
		return paginate(links, {
			pageSize: 20,
			props: { link },
		});
	});
	return routes;
};

// Props
interface Props {
	page: Page<DevLink>;
}

const { page } = Astro.props;
---

<Layout
	title={`開発リンク集 | ページ${page.currentPage} | ブログ | ${import.meta.env.APP_NAME}`}
	description="Web開発に利用しているサイトへのリンクをまとめています"
>
	<PageTitle
		title="開発リンク集"
		description="Web開発に利用しているサイトへのリンクをまとめています"
		svgIconPath={svgPaths.link}
		svgViewBox={svgViewBoxes.link}
	/>
	<PageTitleForPc
		title="開発リンク集"
		description="Web開発に利用しているサイトへのリンクをまとめています"
		svgIconPath={svgPaths.link}
		svgViewBox={svgViewBoxes.link}
	/>
	<section id="dev-links">
		<ul class="cards">
			{
				page.data && page.data.length > 0 ? (
					page.data.map((link) => {
						return (
							<li>
								<DevLinkCard link={link} />
							</li>
						);
					})
				) : (
					<NoContent
						message="エントリがありません"
						svgIconPath={svgPaths.link}
						svgViewBox={svgViewBoxes.link}
					/>
				)
			}
		</ul>
	</section>
	<Pager page={page} />
</Layout>

<style lang="scss">
	#dev-links {
		margin-top: 1rem;

		.cards {
			display: flex;
			flex-direction: column;
			gap: 1rem;

			@include resp(lg) {
				gap: 2rem;
			}

			li {
				width: 100%;
				margin: auto;

				@include resp(lg) {
					width: 70%;
				}
			}
		}
	}
</style>
