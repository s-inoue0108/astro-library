---
import Layout from "../../../../layouts/Layout.astro";
import PageTitle from "../../../../components/blog/background/PageTitle.astro";
import CategoriesNavBar from "../../../../components/blog/background/CategoriesNavBar.astro";
import ArticleCards from "../../../../components/blog/large/ArticleCards.astro";
import TagsListModal from "../../../../components/common/modal/TagsListModal.vue";
import ArchivesListModal from "../../../../components/common/modal/ArchivesListModal.vue";
import { articles, categories, tags } from "../../../../lib/newt/instance";
import { getArticles, getTags } from "../../../../lib/newt/client";
import type { Article, Tag } from "../../../../lib/newt/types";
import type { Page, GetStaticPathsOptions } from "astro";
import { svgPaths, svgViewBoxes } from "../../../../lib/svg/paths";

export const getStaticPaths = async ({ paginate }: { paginate: GetStaticPathsOptions["paginate"] }) => {
	const tags = await getTags();
	const articles = await getArticles();

	if (!tags || tags.length <= 0 || !articles || articles.length <= 0) {
		return null;
	}

	const routes = tags.flatMap((tag) => {
		const filteredArticles = articles.filter((article) => {
			return article.tags && article.tags.length > 0 && article.tags.map((tag) => tag.slug).includes(tag.slug);
		});
		return paginate(filteredArticles, {
			params: { tagSlug: tag.slug },
			pageSize: 12,
			props: { tag: tag },
		});
	});
	return routes;
};

// Props
interface Props {
	page: Page<Article>;
	tag: Tag;
}

const { page, tag } = Astro.props;
---

<Layout title={`${tag.name}の記事一覧 | ページ${page.currentPage} | ブログ | ${import.meta.env.APP_NAME}`} description={`タグ "${tag.name}" の記事一覧です`}>
	<section class="articles">
		<PageTitle title={tag.name} bgImage={tag.parentCategory.image} iconImage={tag.icon} svgIconPath={svgPaths.tag} svgViewBox={svgViewBoxes.tag} />
		<CategoriesNavBar />
		<ArticleCards articles={page.data} />
	</section>
	<section class="ui">
		<TagsListModal categories={categories} tags={tags} client:visible />
		<ArchivesListModal articles={articles} client:visible />
	</section>
</Layout>

<script>
	import { gsap } from "gsap";
	import { ScrollTrigger } from "gsap/ScrollTrigger";
	gsap.registerPlugin(ScrollTrigger);

	const cards = gsap.utils.toArray(".article-card");

	cards.forEach((elm: any) => {
		gsap.from(elm, {
			ease: "expo.out",
			duration: 1.5,
			xPercent: 50,
			autoAlpha: 0,
			overflowX: "hidden",
			scrollTrigger: {
				trigger: elm,
			},
		});
	});
</script>

<style lang="scss">
	.articles {
	}

	.ui {
	}
</style>
