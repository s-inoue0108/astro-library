---
import Layout from "../../../layouts/Layout.astro";
import PageTitle from "../../../components/blog/background/PageTitle.astro";
import CategoriesNavBar from "../../../components/blog/background/CategoriesNavBar.astro";
import ArticleCards from "../../../components/blog/large/ArticleCards.astro";
import TagsListModal from "../../../components/common/modal/TagsListModal.vue";
import ArchivesListModal from "../../../components/common/modal/ArchivesListModal.vue";
import Pager from "../../../components/blog/background/Pager.vue";
import { articles, categories, tags } from "../../../lib/newt/instance";
import { getArticles } from "../../../lib/newt/client";
import type { Article } from "../../../lib/newt/types";
import type { Page, GetStaticPathsOptions } from "astro";
import PageTitleForPc from "../../../components/blog/background/PageTitleForPc.astro";
import { svgPaths, svgViewBoxes } from "../../../lib/svg/paths";
import CategoriesListModal from "../../../components/common/modal/CategoriesListModal.vue";

export const getStaticPaths = async ({
	paginate,
}: {
	paginate: GetStaticPathsOptions["paginate"];
}) => {
	const articles = await getArticles();

	if (!articles || articles.length <= 0) {
		return null;
	}

	const routes = articles.flatMap((article) => {
		return paginate(articles, {
			pageSize: 12,
			props: { article: article },
		});
	});
	return routes;
};

// Props
interface Props {
	page: Page<Article>;
}

const { page } = Astro.props;
---

<Layout
	title={`ブログ | ページ${page.currentPage} | ${import.meta.env.APP_NAME}`}
	description={`ブログ | 記事一覧`}
>
	<div id="contents">
		<section id="articles">
			<PageTitleForPc
				title="ブログ"
				svgIconPath={svgPaths.penNib}
				svgViewBox={svgViewBoxes.penNib}
				marginRem={2}
			/>
			<PageTitle title="ブログ" svgIconPath={svgPaths.penNib} svgViewBox={svgViewBoxes.penNib} />
			<CategoriesNavBar />
			<ArticleCards articles={articles} />
			<Pager page={page} />
		</section>
		<section id="sidebar">
			<CategoriesListModal categories={categories} tags={tags} articles={articles} client:visible />
			<TagsListModal categories={categories} tags={tags} client:visible />
			<ArchivesListModal articles={articles} client:visible />
		</section>
	</div>
</Layout>

<script>
	import { gsap } from "gsap";
	import { ScrollTrigger } from "gsap/ScrollTrigger";
	gsap.registerPlugin(ScrollTrigger);

	const cards = gsap.utils.toArray(".article-card");

	cards.forEach((elm: any) => {
		gsap.from(elm, {
			ease: "expo.out",
			duration: 1.5,
			xPercent: 50,
			autoAlpha: 0,
			overflowX: "hidden",
			scrollTrigger: {
				trigger: elm,
			},
		});
	});
</script>

<style lang="scss">
	#contents {
		@include resp(lg) {
			display: flex;
		}

		#articles {
			@include resp(lg) {
				width: 75%;
			}
		}

		#sidebar {
			@include resp(lg) {
				width: 25%;
				margin-top: -2rem;
			}
		}
	}
</style>
