---
import Layout from "../../../layouts/Layout.astro";
import PageTitle from "../../../components/blog/background/PageTitle.astro";
import CategoriesNavBar from "../../../components/blog/background/CategoriesNavBar.astro";
import ArticleCard from "../../../components/blog/card/ArticleCard.astro";
import TagsListModal from "../../../components/common/modal/TagsListModal.vue";
import Pager from "../../../components/blog/background/Pager.vue";
import NoContent from "../../../components/blog/background/NoContent.astro";
import { getArticles, getCategories, getTags } from "../../../lib/newt/client";
import type { Article } from "../../../lib/newt/types";
import type { Page, GetStaticPathsOptions } from "astro";

export const getStaticPaths = async ({ paginate }: { paginate: GetStaticPathsOptions["paginate"] }) => {
	const articles = await getArticles();

	if (!articles || articles.length <= 0) {
		return null;
	}

	const routes = articles.flatMap((article) => {
		return paginate(articles, {
			pageSize: 12,
			props: { article: article },
		});
	});
	return routes;
};

// Props
interface Props {
	page: Page<Article>;
}

const { page } = Astro.props;

const categories = await getCategories();
const tags = await getTags();
---

<Layout title={`記事一覧 | ページ${page.currentPage} | ブログ | ${import.meta.env.APP_NAME}`} description={`記事一覧（ページ${page.currentPage}）`}>
	<PageTitle title="記事一覧" />
	<CategoriesNavBar />
	<ul class="cards">
		{
			page.data && page.data.length !== 0 ? (
				page.data.map((article) => {
					return (
						<li class="article-card">
							<ArticleCard article={article} />
						</li>
					);
				})
			) : (
				<NoContent message="記事がありません" />
			)
		}
	</ul>
	<Pager page={page} />
	<TagsListModal categories={categories} tags={tags} />
</Layout>

<script>
	import { gsap } from "gsap";
	import { ScrollTrigger } from "gsap/ScrollTrigger";
	gsap.registerPlugin(ScrollTrigger);

	const cards = gsap.utils.toArray(".article-card");

	cards.forEach((elm: any) => {
		gsap.from(elm, {
			ease: "expo.out",
			duration: 1.5,
			xPercent: 50,
			autoAlpha: 0,
			overflowX: "hidden",
			scrollTrigger: {
				trigger: elm,
			},
		});
	});
</script>

<style lang="scss">
	.cards {
		overflow-x: hidden;
		width: 100%;
		margin: auto;
		display: flex;
		flex-direction: column;
		gap: 1rem;

		@include resp(lg) {
			flex-direction: row;
			flex-wrap: wrap;
		}

		.article-card {
			width: 100%;
			height: 256px;

			@include resp(lg) {
				width: calc(50% - 0.5rem);
			}

			@include resp(xl) {
				width: calc(25% - 0.25rem - 8px);
			}
		}
	}
</style>
../../../components/common/modal/TagsListModal.vue
