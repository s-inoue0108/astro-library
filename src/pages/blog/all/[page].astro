---
import Layout from "../../../layouts/Layout.astro";
import PageTitle from "../../../components/blog/background/PageTitle.astro";
import CategoriesNavBar from "../../../components/blog/background/CategoriesNavBar.astro";
import ArticleCards from "../../../components/blog/large/ArticleCards.astro";
import TagsListModal from "../../../components/common/modal/TagsListModal.vue";
import ArchivesListModal from "../../../components/common/modal/ArchivesListModal.vue";
import Pager from "../../../components/blog/background/Pager.vue";
import { articles, categories, tags } from "../../../lib/newt/instance";
import { getArticles } from "../../../lib/newt/client";
import type { Article } from "../../../lib/newt/types";
import type { Page, GetStaticPathsOptions } from "astro";

export const getStaticPaths = async ({ paginate }: { paginate: GetStaticPathsOptions["paginate"] }) => {
	const articles = await getArticles();

	if (!articles || articles.length <= 0) {
		return null;
	}

	const routes = articles.flatMap((article) => {
		return paginate(articles, {
			pageSize: 12,
			props: { article: article },
		});
	});
	return routes;
};

// Props
interface Props {
	page: Page<Article>;
}

const { page } = Astro.props;
---

<Layout title={`記事一覧 | ページ${page.currentPage} | ブログ | ${import.meta.env.APP_NAME}`} description={`記事一覧（ページ${page.currentPage}）`}>
	<section class="articles">
		<PageTitle title="記事一覧" />
		<CategoriesNavBar />
		<ArticleCards articles={articles} />
		<Pager page={page} />
	</section>
	<section class="ui">
		<TagsListModal categories={categories} tags={tags} client:visible />
		<ArchivesListModal articles={articles} client:visible />
	</section>
</Layout>

<script>
	import { gsap } from "gsap";
	import { ScrollTrigger } from "gsap/ScrollTrigger";
	gsap.registerPlugin(ScrollTrigger);

	const cards = gsap.utils.toArray(".article-card");

	cards.forEach((elm: any) => {
		gsap.from(elm, {
			ease: "expo.out",
			duration: 1.5,
			xPercent: 50,
			autoAlpha: 0,
			overflowX: "hidden",
			scrollTrigger: {
				trigger: elm,
			},
		});
	});
</script>

<style lang="scss">
	.articles {
	}

	.ui {
	}
</style>
