---
import Layout from "../layouts/Layout.astro";
import PageTitle from "../components/blog/background/PageTitle.astro";
import PageTitleForPc from "../components/blog/background/PageTitleForPc.astro";
import { svgPaths, svgViewBoxes } from "../lib/svg/paths";
import ProgressBar from "../components/profile/ProgressBar.vue";
import QualificationCard from "../components/profile/QualificationCard.vue";
import SectionTitle from "../components/profile/SectionTitle.vue";

import WorkCard from "../components/profile/WorkCard.astro";

import type { Skill } from "../lib/newt/types";

import { Content as ProfileContent } from "../markdown/profile.md";
import { getQualifications, getSkills, getWorks } from "../lib/newt/client";

const skills = await getSkills();
const works = await getWorks();
const qualifications = await getQualifications();

const categories = skills ? Array.from(new Set(skills.map((skill) => skill.category))) : [];

const getSkillsByCategory = (category: string): Skill[] => {
	if (!skills) return [];
	return skills.filter((skill) => skill.category === category);
};
---

<Layout
	title={`プロフィール | ${import.meta.env.APP_NAME}`}
	description="サイト運営者のプロフィールです"
>
	<PageTitle
		title="プロフィール"
		description="サイト運営者のプロフィールです"
		svgIconPath={svgPaths.user}
		svgViewBox={svgViewBoxes.user}
	/>
	<PageTitleForPc
		title="プロフィール"
		description="サイト運営者のプロフィールです"
		svgIconPath={svgPaths.user}
		svgViewBox={svgViewBoxes.user}
	/>

	<SectionTitle title="Introduction" nextHref="/profile#qualifications-section" />
	<section id="introduction-section">
		<ProfileContent />
	</section>
	<SectionTitle
		title="Qualifications"
		prevHref="/profile#introduction-section"
		nextHref="/profile#skills-section"
	/>
	<section id="qualifications-section">
		<ul class="qualifications">
			{
				qualifications &&
					qualifications.map((qualification) => {
						return (
							<li class="qualification">
								<QualificationCard qualification={qualification} />
							</li>
						);
					})
			}
		</ul>
	</section>
	<SectionTitle
		title="Skills"
		prevHref="/profile#qualifications-section"
		nextHref="/profile#works-section"
	/>
	<section id="skills-section">
		{
			categories.length > 0 &&
				categories.map((category) => {
					return (
						<>
							<h2 class="category-name">{category.toUpperCase()}</h2>
							<p class="score-info">Click cards to display scores (0 - 100)</p>
							<ul class="skills">
								{getSkillsByCategory(category).map((skill) => {
									return (
										<li class="skill">
											<ProgressBar skill={skill} client:visible />
										</li>
									);
								})}
							</ul>
						</>
					);
				})
		}
	</section>
	<SectionTitle title="Works" prevHref="/profile#skills-section" />
	<section id="works-section">
		<ul class="works">
			{
				works &&
					works.map((work) => {
						return (
							<li class="work">
								<WorkCard work={work} />
							</li>
						);
					})
			}
		</ul>
	</section>
</Layout>

<style lang="scss">
	#introduction-section {
		position: relative;
		min-height: 100vh;
	}

	#skills-section {
		position: relative;
		min-height: 100vh;
		margin: 3rem calc((100% - 252px - 4rem) / 2);

		@include resp(lg) {
			margin: 8rem calc((100% - 840px - 24rem) / 2);
		}

		.category-name {
			margin-top: 3rem;
			font-size: 1.5rem;
			font-weight: 600;
			letter-spacing: 4px;
			text-align: center;

			@include resp(lg) {
				margin-top: 8rem;
				font-size: 3.2rem;
				letter-spacing: 4px;
				padding-left: 2rem;
			}
		}

		.score-info {
			color: getColor(--text-secondary-color);
			font-size: 0.8rem;
			letter-spacing: 0.5px;
			text-align: center;
			margin-top: 0.5rem;

			@include resp(lg) {
				font-size: 1.2rem;
				letter-spacing: 1px;
				margin-top: 1rem;
			}
		}

		.skills {
			width: 100%;
			display: flex;
			flex-wrap: wrap;
			align-items: center;
			gap: 2rem;
			margin-top: 2rem;

			@include resp(lg) {
				margin-top: 4rem;
				gap: 6rem;
			}
		}
	}

	#qualifications-section {
		position: relative;
		min-height: 100vh;

		.qualifications {
			display: flex;
			flex-direction: column;
			align-items: center;

			@include resp(lg) {
				padding: 0 3rem;
			}

			@include resp(lg) {
				padding: 0 5rem;
			}

			.qualification {
				width: 100%;
			}
		}
	}

	#works-section {
		position: relative;
		min-height: 100vh;

		.works {
			display: flex;
			flex-direction: column;
			align-items: center;
			gap: 3rem;

			@include resp(lg) {
				gap: 5rem;
			}

			.work {
				width: 100%;
			}
		}
	}
</style>
